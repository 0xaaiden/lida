{"summary": {"file_name": "gapminder.json"}, "goals": [{"index": 0, "question": "What is the relationship between life expectancy and GDP per capita?", "visualization": "Scatter plot of life expectancy vs GDP per capita", "rationale": "This visualization can help us understand if there is a correlation between a country's wealth and the life expectancy of its citizens."}, {"index": 1, "question": "What is the trend of population growth over time?", "visualization": "Line chart of population vs year", "rationale": "This visualization can help us understand if the world population is increasing or decreasing over time."}, {"index": 2, "question": "What is the distribution of income per person across different countries?", "visualization": "Box plot of income per person", "rationale": "This visualization can help us understand the spread of income per person across different countries and identify any outliers."}, {"index": 3, "question": "What is the distribution of child mortality rate across different countries?", "visualization": "Histogram of child mortality rate", "rationale": "This visualization can help us understand the spread of child mortality rate across different countries and identify any patterns or outliers."}, {"index": 4, "question": "What is the relationship between fertility rate and life expectancy?", "visualization": "Scatter plot of fertility rate vs life expectancy", "rationale": "This visualization can help us understand if there is a correlation between a country's fertility rate and the life expectancy of its citizens."}], "code": [["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], format='%Y', errors='coerce')\n    data = data.dropna(subset=['year', 'gdpPercap', 'lifeExp'])\n    fig, ax = plt.subplots(figsize=(10, 6))\n    ax.scatter(data['gdpPercap'], data['lifeExp'], c=data['year'].dt.year, cmap='viridis')\n    ax.set_xlabel('GDP per capita')\n    ax.set_ylabel('Life expectancy')\n    ax.set_title('What is the relationship between life expectancy and GDP per capita?')\n    ax.axvline(data['gdpPercap'].median(), color='red', label=f'Median GDP per capita: {data[\"gdpPercap\"].median():,.2f}')\n    ax.legend()\n    return plt\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], format='%Y', errors='coerce')\n    data = data.sort_values(by='year')\n    plt.plot(data['year'], data['population'])\n    plt.title('What is the trend of population growth over time?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['income'] = pd.to_numeric(data['income'], errors='coerce')\n    fig, ax = plt.subplots(figsize=(10, 6))\n    ax.boxplot(data['income'].dropna(), vert=False, showfliers=True, patch_artist=True, boxprops=dict(facecolor='lightblue', color='black'), whiskerprops=dict(color='black'), capprops=dict(color='black'), medianprops=dict(color='black'))\n    ax.set_xlabel('Income per person')\n    plt.title('What is the distribution of income per person across different countries?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['child_mortality'] = pd.to_numeric(data['child_mortality'], errors='coerce')\n    data = data.dropna(subset=['child_mortality'])\n    plt.hist(data['child_mortality'], bins=20, color='blue', alpha=0.5)\n    plt.axvline(data['child_mortality'].median(), color='red', linestyle='dashed', linewidth=1, label='Median: {:.2f}'.format(data['child_mortality'].median()))\n    plt.xlabel('Child Mortality Rate')\n    plt.ylabel('Frequency')\n    plt.legend(loc='upper right')\n    plt.title('What is the distribution of child mortality rate across different countries?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], format='%Y', errors='coerce')\n    data = data.dropna(subset=['year'])\n    data = data.sort_values(by='year')\n    data = data.groupby(['year', 'country']).mean().reset_index()\n    plt.scatter(data['fertility'], data['life_expectancy'], c=data['year'].dt.year, cmap='viridis')\n    plt.colorbar(label='Year')\n    plt.xlabel('Fertility Rate')\n    plt.ylabel('Life Expectancy')\n    plt.title('What is the relationship between fertility rate and life expectancy?')\n    return plt;\n\nchart = plot(data)"]], "filename": "gapminder.json", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], format='%Y', errors='coerce')\n    data = data.dropna(subset=['year', 'gdpPercap', 'lifeExp'])\n    fig, ax = plt.subplots(figsize=(10, 6))\n    ax.scatter(data['gdpPercap'], data['lifeExp'], c=data['year'].dt.year, cmap='viridis')\n    ax.set_xlabel('GDP per capita')\n    ax.set_ylabel('Life expectancy')\n    ax.set_title('What is the relationship between life expectancy and GDP per capita?')\n    ax.axvline(data['gdpPercap'].median(), color='red', label=f'Median GDP per capita: {data[\"gdpPercap\"].median():,.2f}')\n    ax.legend()\n    return plt\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "['gdpPercap', 'lifeExp']", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 6008, in dropna\n    raise KeyError(np.array(subset)[check].tolist())\nKeyError: ['gdpPercap', 'lifeExp']\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], format='%Y', errors='coerce')\n    data = data.sort_values(by='year')\n    plt.plot(data['year'], data['population'])\n    plt.title('What is the trend of population growth over time?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'population'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'population'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 10, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'population'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['income'] = pd.to_numeric(data['income'], errors='coerce')\n    fig, ax = plt.subplots(figsize=(10, 6))\n    ax.boxplot(data['income'].dropna(), vert=False, showfliers=True, patch_artist=True, boxprops=dict(facecolor='lightblue', color='black'), whiskerprops=dict(color='black'), capprops=dict(color='black'), medianprops=dict(color='black'))\n    ax.set_xlabel('Income per person')\n    plt.title('What is the distribution of income per person across different countries?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'income'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'income'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 11, in <module>\n  File \"<string>\", line 4, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'income'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['child_mortality'] = pd.to_numeric(data['child_mortality'], errors='coerce')\n    data = data.dropna(subset=['child_mortality'])\n    plt.hist(data['child_mortality'], bins=20, color='blue', alpha=0.5)\n    plt.axvline(data['child_mortality'].median(), color='red', linestyle='dashed', linewidth=1, label='Median: {:.2f}'.format(data['child_mortality'].median()))\n    plt.xlabel('Child Mortality Rate')\n    plt.ylabel('Frequency')\n    plt.legend(loc='upper right')\n    plt.title('What is the distribution of child mortality rate across different countries?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'child_mortality'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'child_mortality'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 4, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'child_mortality'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], format='%Y', errors='coerce')\n    data = data.dropna(subset=['year'])\n    data = data.sort_values(by='year')\n    data = data.groupby(['year', 'country']).mean().reset_index()\n    plt.scatter(data['fertility'], data['life_expectancy'], c=data['year'].dt.year, cmap='viridis')\n    plt.colorbar(label='Year')\n    plt.xlabel('Fertility Rate')\n    plt.ylabel('Life Expectancy')\n    plt.title('What is the relationship between fertility rate and life expectancy?')\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'life_expectancy'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'life_expectancy'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 8, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'life_expectancy'\n"}}]]}