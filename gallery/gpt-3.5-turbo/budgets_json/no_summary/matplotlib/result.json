{"summary": {"file_name": "budgets.json"}, "goals": [{"index": 0, "question": "What is the distribution of budget amounts across different categories?", "visualization": "Bar chart of budget amounts by category", "rationale": "This visualization will help us understand which categories have the highest and lowest budgets, and identify any outliers."}, {"index": 1, "question": "What is the trend in budget amounts over time?", "visualization": "Line chart of budget amounts by year", "rationale": "This visualization will help us understand if the budget amounts have been increasing, decreasing or remaining stable over time."}, {"index": 2, "question": "What is the proportion of budget allocated to salaries and wages?", "visualization": "Stacked bar chart of budget amounts by category and sub-category", "rationale": "This visualization will help us understand the proportion of budget allocated to salaries and wages compared to other categories and sub-categories."}, {"index": 3, "question": "What is the distribution of budget amounts by department?", "visualization": "Bar chart of budget amounts by department", "rationale": "This visualization will help us understand which departments have the highest and lowest budgets, and identify any outliers."}, {"index": 4, "question": "What is the relationship between budget amounts and actual expenditures?", "visualization": "Scatter plot of budget amounts and actual expenditures by category", "rationale": "This visualization will help us understand if there is a strong correlation between budget amounts and actual expenditures, and identify any categories where there are significant differences between the two."}], "code": [["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data = data.groupby('category')['budget'].sum().reset_index()\n    data = data.sort_values('budget', ascending=False)\n    plt.bar(data['category'], data['budget'])\n    plt.title('What is the distribution of budget amounts across different categories?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], format='%Y', errors='coerce')\n    data = data.sort_values(by='year')\n    plt.plot(data['year'], data['budget_amount'])\n    plt.title('What is the trend in budget amounts over time?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['amount'] = pd.to_numeric(data['amount'], errors='coerce')\n    salary_data = data[data['category'] == 'salaries and wages']\n    other_data = data[data['category'] != 'salaries and wages']\n    salary_sub_categories = salary_data['sub_category'].unique()\n    other_sub_categories = other_data['sub_category'].unique()\n    salary_amounts = []\n    other_amounts = []\n    for sub_category in salary_sub_categories:\n        salary_amounts.append(salary_data[salary_data['sub_category'] == sub_category]['amount'].sum())\n    for sub_category in other_sub_categories:\n        other_amounts.append(other_data[other_data['sub_category'] == sub_category]['amount'].sum())\n    fig, ax = plt.subplots()\n    ax.bar(salary_sub_categories, salary_amounts, label='Salaries and Wages')\n    ax.bar(other_sub_categories, other_amounts, bottom=salary_amounts, label='Other Categories')\n    ax.legend()\n    plt.title('What is the proportion of budget allocated to salaries and wages?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data = data.groupby('Department')['Budget'].sum().reset_index()\n    data = data.sort_values('Budget', ascending=False)\n    plt.bar(data['Department'], data['Budget'])\n    plt.title('What is the distribution of budget amounts by department?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['budget_amount'] = pd.to_numeric(data['budget_amount'], errors='coerce')\n    data['actual_expenditures'] = pd.to_numeric(data['actual_expenditures'], errors='coerce')\n    categories = data['category'].unique()\n    colors = ['red', 'blue', 'green', 'orange', 'purple', 'brown', 'pink', 'gray', 'olive', 'cyan']\n    fig, ax = plt.subplots()\n    for i, category in enumerate(categories):\n        category_data = data[data['category'] == category]\n        ax.scatter(category_data['budget_amount'], category_data['actual_expenditures'], color=colors[i], label=category)\n    ax.set_xlabel('Budget Amount')\n    ax.set_ylabel('Actual Expenditures')\n    ax.legend()\n    plt.title('What is the relationship between budget amounts and actual expenditures?', wrap=True)\n    return plt;\n\nchart = plot(data)"]], "filename": "budgets.json", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data = data.groupby('category')['budget'].sum().reset_index()\n    data = data.sort_values('budget', ascending=False)\n    plt.bar(data['category'], data['budget'])\n    plt.title('What is the distribution of budget amounts across different categories?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'category'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 10, in <module>\n  File \"<string>\", line 4, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 7718, in groupby\n    return DataFrameGroupBy(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 882, in __init__\n    grouper, exclusions, obj = get_grouper(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 882, in get_grouper\n    raise KeyError(gpr)\nKeyError: 'category'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['year'] = pd.to_datetime(data['year'], format='%Y', errors='coerce')\n    data = data.sort_values(by='year')\n    plt.plot(data['year'], data['budget_amount'])\n    plt.title('What is the trend in budget amounts over time?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'year'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'year'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 10, in <module>\n  File \"<string>\", line 4, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'year'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['amount'] = pd.to_numeric(data['amount'], errors='coerce')\n    salary_data = data[data['category'] == 'salaries and wages']\n    other_data = data[data['category'] != 'salaries and wages']\n    salary_sub_categories = salary_data['sub_category'].unique()\n    other_sub_categories = other_data['sub_category'].unique()\n    salary_amounts = []\n    other_amounts = []\n    for sub_category in salary_sub_categories:\n        salary_amounts.append(salary_data[salary_data['sub_category'] == sub_category]['amount'].sum())\n    for sub_category in other_sub_categories:\n        other_amounts.append(other_data[other_data['sub_category'] == sub_category]['amount'].sum())\n    fig, ax = plt.subplots()\n    ax.bar(salary_sub_categories, salary_amounts, label='Salaries and Wages')\n    ax.bar(other_sub_categories, other_amounts, bottom=salary_amounts, label='Other Categories')\n    ax.legend()\n    plt.title('What is the proportion of budget allocated to salaries and wages?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'amount'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'amount'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 4, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'amount'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data = data.groupby('Department')['Budget'].sum().reset_index()\n    data = data.sort_values('Budget', ascending=False)\n    plt.bar(data['Department'], data['Budget'])\n    plt.title('What is the distribution of budget amounts by department?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'Department'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 10, in <module>\n  File \"<string>\", line 4, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 7718, in groupby\n    return DataFrameGroupBy(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 882, in __init__\n    grouper, exclusions, obj = get_grouper(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 882, in get_grouper\n    raise KeyError(gpr)\nKeyError: 'Department'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\ndef plot(data: pd.DataFrame):\n    data['budget_amount'] = pd.to_numeric(data['budget_amount'], errors='coerce')\n    data['actual_expenditures'] = pd.to_numeric(data['actual_expenditures'], errors='coerce')\n    categories = data['category'].unique()\n    colors = ['red', 'blue', 'green', 'orange', 'purple', 'brown', 'pink', 'gray', 'olive', 'cyan']\n    fig, ax = plt.subplots()\n    for i, category in enumerate(categories):\n        category_data = data[data['category'] == category]\n        ax.scatter(category_data['budget_amount'], category_data['actual_expenditures'], color=colors[i], label=category)\n    ax.set_xlabel('Budget Amount')\n    ax.set_ylabel('Actual Expenditures')\n    ax.legend()\n    plt.title('What is the relationship between budget amounts and actual expenditures?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'budget_amount'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'budget_amount'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 139, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 4, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'budget_amount'\n"}}]]}