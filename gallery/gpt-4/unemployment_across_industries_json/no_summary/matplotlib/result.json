{"summary": {"file_name": "unemployment-across-industries.json"}, "goals": [{"index": 0, "question": "What is the overall trend of unemployment across industries?", "visualization": "Line chart showing the trend of unemployment rate across industries over time", "rationale": "This visualization helps to identify the industries that have been most affected by unemployment over time."}, {"index": 1, "question": "Which industry has the highest unemployment rate?", "visualization": "Bar chart showing the unemployment rate for each industry", "rationale": "This visualization helps to identify the industry with the highest unemployment rate, which can be useful for policymakers and job seekers."}, {"index": 2, "question": "What is the relationship between education level and unemployment rate?", "visualization": "Scatter plot showing the relationship between education level and unemployment rate", "rationale": "This visualization helps to identify the relationship between education level and unemployment rate, which can be useful for policymakers and educators."}, {"index": 3, "question": "What is the distribution of unemployment rate across states?", "visualization": "Choropleth map showing the unemployment rate for each state", "rationale": "This visualization helps to identify the states with the highest and lowest unemployment rates, which can be useful for policymakers and job seekers."}, {"index": 4, "question": "What is the trend of unemployment rate for each industry over time?", "visualization": "Multiple line chart showing the trend of unemployment rate for each industry over time", "rationale": "This visualization helps to identify the industries that have experienced the most significant changes in unemployment rate over time."}], "code": [["import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    \n    data['date'] = pd.to_datetime(data['date'], errors='ignore')\n    data = data.sort_values(by='date')\n    \n    industries = data['industry'].unique()\n    \n    for industry in industries:\n        industry_data = data[data['industry'] == industry]\n        plt.plot(industry_data['date'], industry_data['unemployment_rate'], label=industry)\n    \n    plt.xlabel('Date')\n    plt.ylabel('Unemployment Rate')\n    plt.title('What is the overall trend of unemployment across industries?')\n    \n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    \n    plt.xticks(rotation=45)\n    plt.legend()\n    return plt;\n\nchart = plot(data)\nchart.show()"], ["import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    ax = data.plot(kind='bar', x='industry', y='unemployment_rate')\n    ax.set_title('Which industry has the highest unemployment rate?')\n    ax.set_xlabel('Industry')\n    ax.set_ylabel('Unemployment Rate')\n    \n    if len(plt.xticks()[0]) > 20:\n        ax.xaxis.set_major_locator(ticker.MaxNLocator(20))\n    plt.xticks(rotation=45)\n    \n    max_unemployment_rate = data['unemployment_rate'].max()\n    max_industry = data.loc[data['unemployment_rate'] == max_unemployment_rate, 'industry'].iloc[0]\n    ax.axhline(max_unemployment_rate, color='r', linestyle='--', label=f'Highest: {max_industry} ({max_unemployment_rate:.2f})')\n    ax.legend()\n    \n    return plt;\n\nchart = plot(data)\nchart.show()"], ["import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    plt.scatter(data['education_level'], data['unemployment_rate'])\n    plt.xlabel('Education Level')\n    plt.ylabel('Unemployment Rate')\n    \n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    \n    plt.xticks(rotation=45)\n    plt.title('What is the relationship between education level and unemployment rate?', wrap=True)\n    return plt;\n\nchart = plot(data)\nchart.show()"], ["import pandas as pd\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\ndef plot(data: pd.DataFrame):\n    # Read the US states shapefile\n    us_states = gpd.read_file(\"https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json\")\n\n    # Merge the data with the shapefile\n    merged_data = us_states.set_index(\"name\").join(data.set_index(\"state\"))\n\n    # Create the choropleth map\n    fig, ax = plt.subplots(1, figsize=(6, 6))\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\n    merged_data.plot(column=\"unemployment_rate\", cmap=\"coolwarm\", linewidth=0.8, ax=ax, edgecolor=\"0.8\", legend=True, cax=cax)\n\n    # Set the title\n    plt.title(\"What is the distribution of unemployment rate across states?\", wrap=True)\n\n    return plt\n\nchart = plot(data)"], ["import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    \n    industries = data['industry'].unique()\n    for industry in industries:\n        industry_data = data[data['industry'] == industry]\n        industry_data['date'] = pd.to_datetime(industry_data['date'], errors='ignore')\n        plt.plot(industry_data['date'], industry_data['unemployment_rate'], label=industry)\n    \n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    plt.xticks(rotation=45)\n    plt.xlabel('Date')\n    plt.ylabel('Unemployment Rate')\n    plt.title('What is the trend of unemployment rate for each industry over time?')\n    plt.legend()\n    return plt;\n\nchart = plot(data)\nchart.show()"]], "filename": "unemployment-across-industries.json", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    \n    data['date'] = pd.to_datetime(data['date'], errors='ignore')\n    data = data.sort_values(by='date')\n    \n    industries = data['industry'].unique()\n    \n    for industry in industries:\n        industry_data = data[data['industry'] == industry]\n        plt.plot(industry_data['date'], industry_data['unemployment_rate'], label=industry)\n    \n    plt.xlabel('Date')\n    plt.ylabel('Unemployment Rate')\n    plt.title('What is the overall trend of unemployment across industries?')\n    \n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    \n    plt.xticks(rotation=45)\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'industry'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'industry'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 28, in <module>\n  File \"<string>\", line 11, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'industry'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    ax = data.plot(kind='bar', x='industry', y='unemployment_rate')\n    ax.set_title('Which industry has the highest unemployment rate?')\n    ax.set_xlabel('Industry')\n    ax.set_ylabel('Unemployment Rate')\n    \n    if len(plt.xticks()[0]) > 20:\n        ax.xaxis.set_major_locator(ticker.MaxNLocator(20))\n    plt.xticks(rotation=45)\n    \n    max_unemployment_rate = data['unemployment_rate'].max()\n    max_industry = data.loc[data['unemployment_rate'] == max_unemployment_rate, 'industry'].iloc[0]\n    ax.axhline(max_unemployment_rate, color='r', linestyle='--', label=f'Highest: {max_industry} ({max_unemployment_rate:.2f})')\n    ax.legend()\n    \n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'industry'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'industry'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 7, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/plotting/_core.py\", line 937, in __call__\n    elif not isinstance(data[x], ABCSeries):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'industry'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    plt.scatter(data['education_level'], data['unemployment_rate'])\n    plt.xlabel('Education Level')\n    plt.ylabel('Unemployment Rate')\n    \n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    \n    plt.xticks(rotation=45)\n    plt.title('What is the relationship between education level and unemployment rate?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'education_level'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'education_level'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 7, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'education_level'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\ndef plot(data: pd.DataFrame):\n    # Read the US states shapefile\n    us_states = gpd.read_file(\"https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json\")\n\n    # Merge the data with the shapefile\n    merged_data = us_states.set_index(\"name\").join(data.set_index(\"state\"))\n\n    # Create the choropleth map\n    fig, ax = plt.subplots(1, figsize=(6, 6))\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\n    merged_data.plot(column=\"unemployment_rate\", cmap=\"coolwarm\", linewidth=0.8, ax=ax, edgecolor=\"0.8\", legend=True, cax=cax)\n\n    # Set the title\n    plt.title(\"What is the distribution of unemployment rate across states?\", wrap=True)\n\n    return plt\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "\"None of ['state'] are in the columns\"", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 11, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 5500, in set_index\n    raise KeyError(f\"None of {missing} are in the columns\")\nKeyError: \"None of ['state'] are in the columns\"\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    \n    industries = data['industry'].unique()\n    for industry in industries:\n        industry_data = data[data['industry'] == industry]\n        industry_data['date'] = pd.to_datetime(industry_data['date'], errors='ignore')\n        plt.plot(industry_data['date'], industry_data['unemployment_rate'], label=industry)\n    \n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    plt.xticks(rotation=45)\n    plt.xlabel('Date')\n    plt.ylabel('Unemployment Rate')\n    plt.title('What is the trend of unemployment rate for each industry over time?')\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'industry'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'industry'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 8, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'industry'\n"}}]]}