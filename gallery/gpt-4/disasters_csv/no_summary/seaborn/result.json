{"summary": {"file_name": "disasters.csv"}, "goals": [{"index": 0, "question": "What is the trend of natural disasters over the years?", "visualization": "line chart of number of disasters per year", "rationale": "This visualization will help us understand if there is an increase or decrease in the frequency of natural disasters over time."}, {"index": 1, "question": "Which type of natural disaster is the most frequent?", "visualization": "bar chart of disaster type and frequency", "rationale": "This visualization will help us identify the most common type of natural disaster and prioritize disaster preparedness efforts accordingly."}, {"index": 2, "question": "What is the distribution of deaths caused by natural disasters?", "visualization": "histogram of number of deaths", "rationale": "This visualization will help us understand the severity of natural disasters and the potential impact on human life."}, {"index": 3, "question": "Which countries are most affected by natural disasters?", "visualization": "choropleth map of disaster frequency by country", "rationale": "This visualization will help us identify the countries that are most vulnerable to natural disasters and prioritize disaster relief efforts accordingly."}, {"index": 4, "question": "What is the economic impact of natural disasters?", "visualization": "stacked bar chart of disaster type and economic damage", "rationale": "This visualization will help us understand the financial impact of natural disasters and the potential cost of disaster preparedness and relief efforts."}], "code": [["import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    \n    data['date'] = pd.to_datetime(data['date'], errors='ignore')\n    data['year'] = data['date'].dt.year\n    yearly_disasters = data.groupby('year').size().reset_index(name='count')\n    \n    sns.lineplot(x='year', y='count', data=yearly_disasters)\n    \n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    plt.xticks(rotation=45)\n    \n    plt.title('What is the trend of natural disasters over the years?', wrap=True)\n    return plt;\n\nchart = plot(data)\nchart.show()"], ["import seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    disaster_counts = data['disaster_type'].value_counts()\n    sns.barplot(x=disaster_counts.index, y=disaster_counts.values)\n    plt.xlabel('Disaster Type')\n    plt.ylabel('Frequency')\n    plt.xticks(rotation=45)\n    plt.title('Which type of natural disaster is the most frequent?', wrap=True)\n    return plt;\n\nchart = plot(data)\nchart.show()"], ["import seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    sns.histplot(data=data, x='number_of_deaths', bins=20)\n    plt.title('What is the distribution of deaths caused by natural disasters?', wrap=True)\n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    plt.xticks(rotation=45)\n    return plt;\n\nchart = plot(data)\nchart.show()"], ["import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    \n    # Load the world shapefile\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    \n    # Merge the disaster data with the world shapefile\n    world_data = world.merge(data, left_on='iso_a3', right_on='country_code')\n    \n    # Plot the choropleth map\n    world_data.plot(column='disaster_frequency', cmap='coolwarm', legend=True)\n    \n    plt.title('Which countries are most affected by natural disasters?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    data['date'] = pd.to_datetime(data['date'], errors='ignore')\n    chart = sns.barplot(x='disaster_type', y='economic_damage', data=data, estimator=sum, ci=None)\n    plt.title('What is the economic impact of natural disasters?', wrap=True)\n    plt.xticks(rotation=45)\n    if len(plt.xticks()[0]) > 20:\n        chart.xaxis.set_major_locator(ticker.MaxNLocator(20))\n    return plt;\n\nchart = plot(data)\nchart.show()"]], "filename": "disasters.csv", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    \n    data['date'] = pd.to_datetime(data['date'], errors='ignore')\n    data['year'] = data['date'].dt.year\n    yearly_disasters = data.groupby('year').size().reset_index(name='count')\n    \n    sns.lineplot(x='year', y='count', data=yearly_disasters)\n    \n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    plt.xticks(rotation=45)\n    \n    plt.title('What is the trend of natural disasters over the years?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'date'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'date'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 9, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'date'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    disaster_counts = data['disaster_type'].value_counts()\n    sns.barplot(x=disaster_counts.index, y=disaster_counts.values)\n    plt.xlabel('Disaster Type')\n    plt.ylabel('Frequency')\n    plt.xticks(rotation=45)\n    plt.title('Which type of natural disaster is the most frequent?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'disaster_type'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'disaster_type'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 8, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'disaster_type'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    sns.histplot(data=data, x='number_of_deaths', bins=20)\n    plt.title('What is the distribution of deaths caused by natural disasters?', wrap=True)\n    if len(plt.xticks()[0]) > 20:\n        plt.gca().xaxis.set_major_locator(ticker.MaxNLocator(20))\n    plt.xticks(rotation=45)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Could not interpret value `number_of_deaths` for parameter `x`", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 8, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 1430, in histplot\n    p = _DistributionPlotter(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/distributions.py\", line 111, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 605, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 668, in assign_variables\n    plot_data, variables = self._assign_variables_longform(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_core.py\", line 903, in _assign_variables_longform\n    raise ValueError(err)\nValueError: Could not interpret value `number_of_deaths` for parameter `x`\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport matplotlib.ticker as ticker\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    \n    # Load the world shapefile\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    \n    # Merge the disaster data with the world shapefile\n    world_data = world.merge(data, left_on='iso_a3', right_on='country_code')\n    \n    # Plot the choropleth map\n    world_data.plot(column='disaster_frequency', cmap='coolwarm', legend=True)\n    \n    plt.title('Which countries are most affected by natural disasters?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'country_code'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 14, in plot\n  File \"/home/victordibia/miniconda3/lib/python3.9/site-packages/geopandas/geodataframe.py\", line 1470, in merge\n    result = DataFrame.merge(self, *args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 9351, in merge\n    return merge(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/reshape/merge.py\", line 107, in merge\n    op = _MergeOperation(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/reshape/merge.py\", line 700, in __init__\n    ) = self._get_merge_keys()\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/reshape/merge.py\", line 1097, in _get_merge_keys\n    right_keys.append(right._get_label_or_level_values(rk))\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/generic.py\", line 1840, in _get_label_or_level_values\n    raise KeyError(key)\nKeyError: 'country_code'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    plt.figure(figsize=(6, 6))\n    data['date'] = pd.to_datetime(data['date'], errors='ignore')\n    chart = sns.barplot(x='disaster_type', y='economic_damage', data=data, estimator=sum, ci=None)\n    plt.title('What is the economic impact of natural disasters?', wrap=True)\n    plt.xticks(rotation=45)\n    if len(plt.xticks()[0]) > 20:\n        chart.xaxis.set_major_locator(ticker.MaxNLocator(20))\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'date'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'date'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 132, in execute\n    exec(code, None, ex_locals)\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 8, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'date'\n"}}]]}