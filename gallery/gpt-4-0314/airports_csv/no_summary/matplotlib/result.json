{"summary": {"file_name": "airports.csv"}, "goals": [{"index": 0, "question": "What is the distribution of airports by country?", "visualization": "Bar chart of number of airports by country", "rationale": "This visualization will help us understand which countries have the most and least number of airports. This information can be useful for airlines and airport management companies to identify potential markets and investment opportunities."}, {"index": 1, "question": "What is the distribution of airports by type?", "visualization": "Pie chart of number of airports by type", "rationale": "This visualization will help us understand the proportion of different types of airports such as small, medium, and large airports. This information can be useful for airlines and airport management companies to identify the types of airports they need to focus on for their operations."}, {"index": 2, "question": "What is the busiest airport in terms of passenger traffic?", "visualization": "Bar chart of top 10 airports by passenger traffic", "rationale": "This visualization will help us identify the busiest airports in terms of passenger traffic. This information can be useful for airlines to identify the airports they need to focus on for their operations and for airport management companies to plan for capacity expansion."}, {"index": 3, "question": "What is the distribution of airports by region?", "visualization": "Map of airports by region", "rationale": "This visualization will help us understand the distribution of airports across different regions. This information can be useful for airlines and airport management companies to identify potential markets and investment opportunities."}, {"index": 4, "question": "What is the trend in the number of airports over time?", "visualization": "Line chart of number of airports by year", "rationale": "This visualization will help us understand the trend in the number of airports over time. This information can be useful for airlines and airport management companies to plan for capacity expansion and to identify potential markets and investment opportunities."}], "code": [["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group the data by country and count the number of airports\n    country_counts = data['country'].value_counts()\n\n    # Create a bar chart of the number of airports by country\n    ax = country_counts.plot(kind='bar', figsize=(15, 7), color='c', legend=True)\n    ax.set_xlabel('Country')\n    ax.set_ylabel('Number of Airports')\n    ax.set_title('What is the distribution of airports by country?')\n\n    return plt\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    airport_types = data['type'].value_counts()\n    plt.pie(airport_types, labels=airport_types.index, autopct='%1.1f%%')\n    plt.title('What is the distribution of airports by type?', wrap=True)\n    plt.legend(airport_types.index, title=\"Airport Types\", loc=\"best\")\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Sort the data by passenger traffic and select the top 10 airports\n    top_airports = data.sort_values(by='passenger_traffic', ascending=False).head(10)\n\n    # Create a bar chart\n    ax = top_airports.plot.bar(x='airport_name', y='passenger_traffic', legend=False)\n\n    # Set the title and labels\n    plt.title('What is the busiest airport in terms of passenger traffic?', wrap=True)\n    plt.xlabel('Airport Name')\n    plt.ylabel('Passenger Traffic')\n\n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n\n    # Add a horizontal line for the maximum passenger traffic value\n    max_traffic = top_airports['passenger_traffic'].max()\n    plt.axhline(y=max_traffic, color='r', linestyle='--', label=f'Max Traffic: {max_traffic:.2f}')\n\n    # Add a legend\n    plt.legend()\n\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\ndef plot(data: pd.DataFrame):\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    gdf = gpd.GeoDataFrame(data, geometry=gpd.points_from_xy(data.longitude, data.latitude))\n    \n    fig, ax = plt.subplots(figsize=(15, 10))\n    world.boundary.plot(ax=ax, linewidth=1)\n    gdf.plot(ax=ax, markersize=5, column='region', legend=True, cmap='viridis', legend_kwds={'loc': 'lower left'})\n    \n    plt.title('What is the distribution of airports by region?', wrap=True)\n    return plt;\n\nchart = plot(data)"], ["import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['Year'] = pd.to_datetime(data['file_name'], errors='coerce').dt.year\n    data = data[pd.notna(data['Year'])]\n    \n    yearly_airports = data.groupby('Year').size()\n    \n    plt.plot(yearly_airports.index, yearly_airports.values)\n    plt.xlabel('Year')\n    plt.ylabel('Number of Airports')\n    plt.title('What is the trend in the number of airports over time?', wrap=True)\n    plt.legend(['Number of Airports'])\n    \n    return plt;\n\nchart = plot(data)"]], "filename": "airports.csv", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Group the data by country and count the number of airports\n    country_counts = data['country'].value_counts()\n\n    # Create a bar chart of the number of airports by country\n    ax = country_counts.plot(kind='bar', figsize=(15, 7), color='c', legend=True)\n    ax.set_xlabel('Country')\n    ax.set_ylabel('Number of Airports')\n    ax.set_title('What is the distribution of airports by country?')\n\n    return plt\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "cannot convert float NaN to integer", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 157, in execute\n    plt.savefig(buf, format=\"png\", dpi=100, pad_inches=0.2)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/pyplot.py\", line 979, in savefig\n    res = fig.savefig(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/figure.py\", line 3046, in savefig\n    self.canvas.print_figure(fname, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backend_bases.py\", line 2319, in print_figure\n    result = print_method(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backend_bases.py\", line 1648, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/_api/deprecation.py\", line 415, in wrapper\n    return func(*inner_args, **inner_kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py\", line 540, in print_png\n    FigureCanvasAgg.draw(self)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py\", line 436, in draw\n    self.figure.draw(self.renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/artist.py\", line 73, in draw_wrapper\n    result = draw(artist, renderer, *args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/artist.py\", line 50, in draw_wrapper\n    return draw(artist, renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/figure.py\", line 2837, in draw\n    mimage._draw_list_compositing_images(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/image.py\", line 132, in _draw_list_compositing_images\n    a.draw(renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/artist.py\", line 50, in draw_wrapper\n    return draw(artist, renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axes/_base.py\", line 3055, in draw\n    self._update_title_position(renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axes/_base.py\", line 2991, in _update_title_position\n    bb = ax.xaxis.get_tightbbox(renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axis.py\", line 1103, in get_tightbbox\n    ticks_to_draw = self._update_ticks()\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axis.py\", line 1045, in _update_ticks\n    major_locs = self.get_majorticklocs()\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axis.py\", line 1277, in get_majorticklocs\n    return self.major.locator()\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/ticker.py\", line 2115, in __call__\n    return self.tick_values(vmin, vmax)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/ticker.py\", line 2123, in tick_values\n    locs = self._raw_ticks(vmin, vmax)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/ticker.py\", line 2062, in _raw_ticks\n    nbins = np.clip(self.axis.get_tick_space(),\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axis.py\", line 2267, in get_tick_space\n    return int(np.floor(length / size))\nValueError: cannot convert float NaN to integer\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    airport_types = data['type'].value_counts()\n    plt.pie(airport_types, labels=airport_types.index, autopct='%1.1f%%')\n    plt.title('What is the distribution of airports by type?', wrap=True)\n    plt.legend(airport_types.index, title=\"Airport Types\", loc=\"best\")\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'type'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'type'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 11, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'type'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    # Sort the data by passenger traffic and select the top 10 airports\n    top_airports = data.sort_values(by='passenger_traffic', ascending=False).head(10)\n\n    # Create a bar chart\n    ax = top_airports.plot.bar(x='airport_name', y='passenger_traffic', legend=False)\n\n    # Set the title and labels\n    plt.title('What is the busiest airport in terms of passenger traffic?', wrap=True)\n    plt.xlabel('Airport Name')\n    plt.ylabel('Passenger Traffic')\n\n    # Rotate x-axis labels for better readability\n    plt.xticks(rotation=45)\n\n    # Add a horizontal line for the maximum passenger traffic value\n    max_traffic = top_airports['passenger_traffic'].max()\n    plt.axhline(y=max_traffic, color='r', linestyle='--', label=f'Max Traffic: {max_traffic:.2f}')\n\n    # Add a legend\n    plt.legend()\n\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'passenger_traffic'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 28, in <module>\n  File \"<string>\", line 6, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 6319, in sort_values\n    k = self._get_label_or_level_values(by, axis=axis)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/generic.py\", line 1840, in _get_label_or_level_values\n    raise KeyError(key)\nKeyError: 'passenger_traffic'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\ndef plot(data: pd.DataFrame):\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    gdf = gpd.GeoDataFrame(data, geometry=gpd.points_from_xy(data.longitude, data.latitude))\n    \n    fig, ax = plt.subplots(figsize=(15, 10))\n    world.boundary.plot(ax=ax, linewidth=1)\n    gdf.plot(ax=ax, markersize=5, column='region', legend=True, cmap='viridis', legend_kwds={'loc': 'lower left'})\n    \n    plt.title('What is the distribution of airports by region?', wrap=True)\n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'region'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'region'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 12, in plot\n  File \"/home/victordibia/miniconda3/lib/python3.9/site-packages/geopandas/plotting.py\", line 968, in __call__\n    return plot_dataframe(data, *args, **kwargs)\n  File \"/home/victordibia/miniconda3/lib/python3.9/site-packages/geopandas/plotting.py\", line 728, in plot_dataframe\n    values = df[column]\n  File \"/home/victordibia/miniconda3/lib/python3.9/site-packages/geopandas/geodataframe.py\", line 1415, in __getitem__\n    result = super().__getitem__(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'region'\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import matplotlib.pyplot as plt\nimport pandas as pd\n\ndef plot(data: pd.DataFrame):\n    data['Year'] = pd.to_datetime(data['file_name'], errors='coerce').dt.year\n    data = data[pd.notna(data['Year'])]\n    \n    yearly_airports = data.groupby('Year').size()\n    \n    plt.plot(yearly_airports.index, yearly_airports.values)\n    plt.xlabel('Year')\n    plt.ylabel('Number of Airports')\n    plt.title('What is the trend in the number of airports over time?', wrap=True)\n    plt.legend(['Number of Airports'])\n    \n    return plt;\n\nchart = plot(data)", "library": "matplotlib", "error": {"message": "'file_name'", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3621, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 136, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 163, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'file_name'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 5, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/frame.py\", line 3505, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3623, in get_loc\n    raise KeyError(key) from err\nKeyError: 'file_name'\n"}}]]}