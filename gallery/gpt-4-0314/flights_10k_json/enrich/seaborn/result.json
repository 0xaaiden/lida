{"summary": {"name": "flights-10k", "dataset_description": "A dataset containing information about 10,000 flights, including date, delay, distance, origin, destination, and origin-destination pairs.", "fields": [{"column": "date", "description": "The date and time of the flight.", "semantic_type": "datetime", "properties": {"dtype": "date", "min": "2001-01-01 07:00:00", "max": "2001-03-31 21:45:00", "samples": ["2001-01-28 15:20:00", "2001-02-23 15:10:00", "2001-01-06 14:30:00"], "num_unique_values": 4148}}, {"column": "delay", "description": "The delay of the flight in minutes.", "semantic_type": "number", "properties": {"dtype": "number", "std": 25.567233106226176, "min": -38, "max": 325, "samples": [-31, 98, 79], "num_unique_values": 178}}, {"column": "distance", "description": "The distance of the flight in miles.", "semantic_type": "number", "properties": {"dtype": "number", "std": 358.2172840658196, "min": 108, "max": 2298, "samples": [1848, 590, 423], "num_unique_values": 287}}, {"column": "origin", "description": "The origin airport of the flight.", "semantic_type": "airport", "properties": {"dtype": "category", "samples": ["RDU", "AUS", "SAN"], "num_unique_values": 59}}, {"column": "destination", "description": "The destination airport of the flight.", "semantic_type": "airport", "properties": {"dtype": "category", "samples": ["JAN", "ISP", "MCO"], "num_unique_values": 59}}, {"column": "origin_destination", "description": "The origin-destination pair of the flight.", "semantic_type": "route", "properties": {"dtype": "category", "samples": ["SNA-OAK", "BNA-AUS", "MAF-ELP"], "num_unique_values": 604}}], "field_names": ["date", "delay", "distance", "origin", "destination", "origin_destination"], "file_name": "flights-10k.json"}, "goals": [{"index": 0, "question": "What is the distribution of flight delays?", "visualization": "histogram of delay", "rationale": "This helps to identify the most common delay times and the spread of delays in the dataset."}, {"index": 1, "question": "What is the average distance of flights?", "visualization": "box plot of distance", "rationale": "This helps to identify the median distance, the range of distances, and any outliers in the dataset."}, {"index": 2, "question": "What is the most common origin airport?", "visualization": "bar chart of origin", "rationale": "This helps to identify the airport with the highest number of flights and the distribution of flights across different airports."}, {"index": 3, "question": "What is the most common destination airport?", "visualization": "bar chart of destination", "rationale": "This helps to identify the airport with the highest number of flights and the distribution of flights across different airports."}, {"index": 4, "question": "What is the distribution of flights across different origin-destination pairs?", "visualization": "heatmap of origin_destination", "rationale": "This helps to identify the most common origin-destination pairs and any patterns in the distribution of flights across different pairs."}], "code": [["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.histplot(data=data, x='delay', bins=30, kde=True, color='blue')\n    plt.axvline(data['delay'].median(), color='red', linestyle='--', label=f\"Median: {data['delay'].median():.2f}\")\n    plt.title(\"What is the distribution of flight delays?\", wrap=True)\n    plt.xlabel(\"Delay (minutes)\")\n    plt.ylabel(\"Frequency\")\n    plt.legend()\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.boxplot(data=data, y='distance')\n    plt.axhline(data['distance'].mean(), color='r', linestyle='--', label=f\"Mean: {data['distance'].mean():.2f}\")\n    plt.title(\"What is the average distance of flights?\", wrap=True)\n    plt.legend()\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    origin_counts = data['origin'].value_counts()\n    chart = sns.barplot(x=origin_counts.index, y=origin_counts.values)\n    plt.title('What is the most common origin airport?', wrap=True)\n    plt.xlabel('Origin Airport')\n    plt.ylabel('Number of Flights')\n    plt.xticks(rotation=90)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    destination_counts = data['destination'].value_counts()\n    chart = sns.barplot(x=destination_counts.index, y=destination_counts.values)\n    plt.title('What is the most common destination airport?', wrap=True)\n    plt.xlabel('Destination Airport')\n    plt.ylabel('Number of Flights')\n    plt.xticks(rotation=90)\n    return plt;\n\nchart = plot(data)"], ["import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    data['origin_destination_count'] = data.groupby('origin_destination')['origin_destination'].transform('count')\n    pivot_data = data.pivot_table(index='origin', columns='destination', values='origin_destination_count', aggfunc='sum')\n    heatmap = sns.heatmap(pivot_data, cmap='viridis', linewidths=0.5)\n    plt.title('What is the distribution of flights across different origin-destination pairs?', wrap=True)\n    plt.xlabel('Destination')\n    plt.ylabel('Origin')\n    return plt;\n\nchart = plot(data)"]], "filename": "flights-10k.json", "chart": [[{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.histplot(data=data, x='delay', bins=30, kde=True, color='blue')\n    plt.axvline(data['delay'].median(), color='red', linestyle='--', label=f\"Median: {data['delay'].median():.2f}\")\n    plt.title(\"What is the distribution of flight delays?\", wrap=True)\n    plt.xlabel(\"Delay (minutes)\")\n    plt.ylabel(\"Frequency\")\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "Singular matrix", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 7, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/pyplot.py\", line 2385, in axvline\n    return gca().axvline(x=x, ymin=ymin, ymax=ymax, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axes/_axes.py\", line 805, in axvline\n    self.add_line(l)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axes/_base.py\", line 2288, in add_line\n    self._update_line_limits(line)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axes/_base.py\", line 2321, in _update_line_limits\n    trf_to_data = line_trf - self.transData\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/transforms.py\", line 1470, in __sub__\n    return self + other.inverted()\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/transforms.py\", line 2452, in inverted\n    self._b.inverted(), self._a.inverted())\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/transforms.py\", line 2452, in inverted\n    self._b.inverted(), self._a.inverted())\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/transforms.py\", line 1890, in inverted\n    self._inverted = Affine2D(inv(mtx), shorthand_name=shorthand_name)\n  File \"<__array_function__ internals>\", line 180, in inv\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/numpy/linalg/linalg.py\", line 545, in inv\n    ainv = _umath_linalg.inv(a, signature=signature, extobj=extobj)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/numpy/linalg/linalg.py\", line 88, in _raise_linalgerror_singular\n    raise LinAlgError(\"Singular matrix\")\nnumpy.linalg.LinAlgError: Singular matrix\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    sns.boxplot(data=data, y='distance')\n    plt.axhline(data['distance'].mean(), color='r', linestyle='--', label=f\"Mean: {data['distance'].mean():.2f}\")\n    plt.title(\"What is the average distance of flights?\", wrap=True)\n    plt.legend()\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "tile cannot extend outside image", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 157, in execute\n    plt.savefig(buf, format=\"png\", dpi=100, pad_inches=0.2)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/pyplot.py\", line 979, in savefig\n    res = fig.savefig(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/figure.py\", line 3046, in savefig\n    self.canvas.print_figure(fname, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backend_bases.py\", line 2319, in print_figure\n    result = print_method(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backend_bases.py\", line 1648, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/_api/deprecation.py\", line 415, in wrapper\n    return func(*inner_args, **inner_kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py\", line 541, in print_png\n    mpl.image.imsave(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/image.py\", line 1675, in imsave\n    image.save(fname, **pil_kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/Image.py\", line 2300, in save\n    save_handler(self, fp, filename)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/PngImagePlugin.py\", line 1374, in _save\n    ImageFile._save(im, _idat(fp, chunk), [(\"zip\", (0, 0) + im.size, 0, rawmode)])\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/ImageFile.py\", line 510, in _save\n    encoder.setimage(im.im, b)\nSystemError: tile cannot extend outside image\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    origin_counts = data['origin'].value_counts()\n    chart = sns.barplot(x=origin_counts.index, y=origin_counts.values)\n    plt.title('What is the most common origin airport?', wrap=True)\n    plt.xlabel('Origin Airport')\n    plt.ylabel('Number of Flights')\n    plt.xticks(rotation=90)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "tile cannot extend outside image", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 157, in execute\n    plt.savefig(buf, format=\"png\", dpi=100, pad_inches=0.2)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/pyplot.py\", line 979, in savefig\n    res = fig.savefig(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/figure.py\", line 3046, in savefig\n    self.canvas.print_figure(fname, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backend_bases.py\", line 2319, in print_figure\n    result = print_method(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backend_bases.py\", line 1648, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/_api/deprecation.py\", line 415, in wrapper\n    return func(*inner_args, **inner_kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py\", line 541, in print_png\n    mpl.image.imsave(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/image.py\", line 1675, in imsave\n    image.save(fname, **pil_kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/Image.py\", line 2300, in save\n    save_handler(self, fp, filename)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/PngImagePlugin.py\", line 1374, in _save\n    ImageFile._save(im, _idat(fp, chunk), [(\"zip\", (0, 0) + im.size, 0, rawmode)])\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/ImageFile.py\", line 510, in _save\n    encoder.setimage(im.im, b)\nSystemError: tile cannot extend outside image\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    destination_counts = data['destination'].value_counts()\n    chart = sns.barplot(x=destination_counts.index, y=destination_counts.values)\n    plt.title('What is the most common destination airport?', wrap=True)\n    plt.xlabel('Destination Airport')\n    plt.ylabel('Number of Flights')\n    plt.xticks(rotation=90)\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "tile cannot extend outside image", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 157, in execute\n    plt.savefig(buf, format=\"png\", dpi=100, pad_inches=0.2)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/pyplot.py\", line 979, in savefig\n    res = fig.savefig(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/figure.py\", line 3046, in savefig\n    self.canvas.print_figure(fname, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backend_bases.py\", line 2319, in print_figure\n    result = print_method(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backend_bases.py\", line 1648, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/_api/deprecation.py\", line 415, in wrapper\n    return func(*inner_args, **inner_kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py\", line 541, in print_png\n    mpl.image.imsave(\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/image.py\", line 1675, in imsave\n    image.save(fname, **pil_kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/Image.py\", line 2300, in save\n    save_handler(self, fp, filename)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/PngImagePlugin.py\", line 1374, in _save\n    ImageFile._save(im, _idat(fp, chunk), [(\"zip\", (0, 0) + im.size, 0, rawmode)])\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/PIL/ImageFile.py\", line 510, in _save\n    encoder.setimage(im.im, b)\nSystemError: tile cannot extend outside image\n"}}], [{"spec": null, "status": false, "raster": null, "code": "import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndef plot(data: pd.DataFrame):\n    data['origin_destination_count'] = data.groupby('origin_destination')['origin_destination'].transform('count')\n    pivot_data = data.pivot_table(index='origin', columns='destination', values='origin_destination_count', aggfunc='sum')\n    heatmap = sns.heatmap(pivot_data, cmap='viridis', linewidths=0.5)\n    plt.title('What is the distribution of flights across different origin-destination pairs?', wrap=True)\n    plt.xlabel('Destination')\n    plt.ylabel('Origin')\n    return plt;\n\nchart = plot(data)", "library": "seaborn", "error": {"message": "'box_aspect' and 'fig_aspect' must be positive", "traceback": "Traceback (most recent call last):\n  File \"/home/victordibia/projects/projectlida/lida/lib/lida/modules/executor.py\", line 144, in execute\n    exec(code, ex_locals)\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 8, in plot\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/_decorators.py\", line 46, in inner_f\n    return f(**kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/matrix.py\", line 553, in heatmap\n    plotter.plot(ax, cbar_ax, kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/matrix.py\", line 336, in plot\n    _draw_figure(ax.figure)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/seaborn/utils.py\", line 95, in _draw_figure\n    fig.canvas.draw()\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py\", line 436, in draw\n    self.figure.draw(self.renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/artist.py\", line 73, in draw_wrapper\n    result = draw(artist, renderer, *args, **kwargs)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/artist.py\", line 50, in draw_wrapper\n    return draw(artist, renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/figure.py\", line 2823, in draw\n    artists = self._get_draw_artists(renderer)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/figure.py\", line 236, in _get_draw_artists\n    ax.apply_aspect(pos)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/axes/_base.py\", line 1902, in apply_aspect\n    pb1 = pb.shrunk_to_aspect(self._box_aspect, pb, fig_aspect)\n  File \"/home/victordibia/.local/lib/python3.9/site-packages/matplotlib/transforms.py\", line 558, in shrunk_to_aspect\n    raise ValueError(\"'box_aspect' and 'fig_aspect' must be positive\")\nValueError: 'box_aspect' and 'fig_aspect' must be positive\n"}}]]}